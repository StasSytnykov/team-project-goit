{"version":3,"sources":["js/api-service.js","js/refs.js","js/library.js","js/moviesMarkup.js","js/searchMovie.js","js/modal.js","js/render-home-page.js","index.js"],"names":["API_KEY","BASE_URL","ApiService","consructor","searchQuery","page","fetchMovies","endpoint","url","fetch","then","res","json","fetchMovieBySearch","fetchGenres","fetchPopularMovie","query","newQuery","refs","searchBtn","document","querySelector","libraryBtn","filmContainer","galleryMovies","libraryLi","homeLi","spanHome","spanLibrary","libraryBtnList","getData","key","responce","data","console","log","results","localStorage","setItem","JSON","stringify","dir","library","ev","target","type","getItem","name","innerHTML","addEventListener","makeMovieMarkup","movies","map","title","release_date","genre_ids","poster_path","genresArr","filter","genreId","includes","id","genre","slice","filteredGenresArr","releaseYear","Date","getFullYear","poster","emptyImg","join","api","getMovie","e","preventDefault","currentTarget","elements","value","renderMovies","catch","err","handleError","markup","getGenres","genres","push","closeModalBtn","backdrop","onCloseModal","window","removeEventListener","onEscBtnClick","classList","add","onBackdropClick","event","code","headerContainer","onClickHomeBtn"],"mappings":"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","file":"src.01d35270.js","sourceRoot":"../src","sourcesContent":["const API_KEY = '3b4cb0b5c3c509ec710c203c7a14be66';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport default class ApiService {\r\n  consructor() {\r\n    this.searchQuery = '';\r\n    this.page = 1;\r\n  }\r\n\r\n  fetchMovies(endpoint) {\r\n    const url = `${BASE_URL}/${endpoint}?api_key=${API_KEY}&language=en-US&query=${this.searchQuery}&page=${this.page}&include_adult=false`;\r\n    return fetch(url).then(res => res.json());\r\n  }\r\n\r\n  fetchMovieBySearch() {\r\n    return this.fetchMovies('search/movie');\r\n  }\r\n\r\n  fetchGenres() {\r\n    return fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`).then(res => res.json());\r\n  }\r\n\r\n  fetchPopularMovie() {\r\n    this.fetchMovies('trending/all/day');\r\n  }\r\n\r\n  get query() {\r\n    return this.searchQuery;\r\n  }\r\n\r\n  set query(newQuery) {\r\n    this.searchQuery = newQuery;\r\n  }\r\n}\r\n","const refs = {\r\n  searchBtn: document.querySelector('.search-form'),\r\n  libraryBtn: document.querySelector('header'),\r\n  filmContainer: document.querySelector('.thumb'),\r\n  galleryMovies: document.querySelector('.gallery-movies'),\r\n\r\n  libraryLi: document.querySelector(\".library\"),\r\n  homeLi: document.querySelector(\".home\"),\r\n  spanHome: document.querySelector(\".span-home\"),\r\n  spanLibrary: document.querySelector(\".span-library\"),\r\n  libraryBtnList: document.querySelector(\".not-displayed\"),\r\n  \r\n};\r\n\r\nexport default refs;\r\n","import refs from './refs';\n\nasync function getData(page, key) {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=c650d1c0c307d1ff6855b3a117a6cfa1&page=${page}`,\n  )\n    .then(responce => responce.json())\n    .then(data => {\n      console.log(data.results);\n      localStorage.setItem(key, JSON.stringify(data.results));\n      console.dir(localStorage);\n    });\n}\ngetData(1, 'watched');\n// getData(2, 'queue');\n\n// console.log(localStorage);\n\nrefs.libraryBtn.addEventListener('click', library);\n\nfunction library(ev) {\n  if (ev.target.type !== 'button') return;\n  if (localStorage.getItem(ev.target.name)) {\n    // render films\n    refs.filmContainer.innerHTML = `There are a lot of films choised by you in ${ev.target.name} section`;\n    return;\n  }\n  refs.filmContainer.innerHTML = `There are NO films choised by you in ${ev.target.name} section`;\n  //   render string \"This list is empty\"\n}\n","import emptyImg from '../js/images/img_not_found.jpg';\r\nimport getGenres from './searchMovie';\r\nimport genresArr from './searchMovie';\r\n\r\nfunction makeMovieMarkup(movies) {\r\n  return movies\r\n    .map(({ title, release_date, genre_ids, poster_path }) => {\r\n      const filteredGenresArr = genresArr\r\n        .filter(genreId => genre_ids.includes(genreId.id))\r\n        .map(genre => genre.name)\r\n        .slice(0, 2);\r\n      const releaseYear = new Date(release_date).getFullYear();\r\n      let poster = emptyImg;\r\n      if (poster_path) {\r\n        poster = `https://image.tmdb.org/t/p/w500${poster_path}`;\r\n      }\r\n      return `<div class=\"photo-card\">\r\n        <div class=\"thumb\">\r\n            <img class=\"image\" src=\"https://image.tmdb.org/t/p/w500${poster}\"\r\n              alt=\"${title}\"\r\n              loading=\"lazy\"\r\n              width=\"309\"\r\n              height=\"449\" />\r\n        </div>\r\n        <div class=\"info\">\r\n          <h5 class=\"info-item\">${title}\r\n          </h5>\r\n          <div class=\"info-item2\">\r\n          <p class=\"info-item\">${genre_ids}\r\n          </p>\r\n          <p class=\"info-item\">${releaseYear}\r\n          </p>\r\n          </div>\r\n        </div>\r\n    </div>`;\r\n    })\r\n    .join('');\r\n}\r\n\r\nexport default makeMovieMarkup;\r\n","import refs from './refs';\r\nimport ApiService from './api-service';\r\nimport makeMovieMarkup from './moviesMarkup';\r\n\r\nconst api = new ApiService();\r\n\r\nrefs.searchBtn.addEventListener('submit', getMovie);\r\n\r\nfunction getMovie(e) {\r\n  e.preventDefault();\r\n  api.query = e.currentTarget.elements.searchQuery.value;\r\n  api\r\n    .fetchMovieBySearch()\r\n    .then(data => {\r\n      renderMovies(data);\r\n    })\r\n    .catch(err => handleError(err));\r\n}\r\n\r\nfunction handleError(err) {\r\n  console.log(err);\r\n}\r\n\r\nfunction renderMovies(data) {\r\n  const markup = makeMovieMarkup(data.results);\r\n  refs.galleryMovies.innerHTML = markup;\r\n}\r\n\r\nfunction getGenres() {\r\n  let genresArr = [];\r\n  api\r\n    .fetchGenres()\r\n    .then(data => {\r\n      data.genres.map(genre => genresArr.push(genre));\r\n    })\r\n    .catch(err => handleError(err));\r\n\r\n  return genresArr;\r\n}\r\n\r\nconst genresArr = getGenres();\r\nexport default genresArr;\r\n","const closeModalBtn = document.querySelector('.modal__close-btn');\nconst backdrop = document.querySelector('.backdrop');\n\ncloseModalBtn.addEventListener('click', onCloseModal);\nbackdrop.addEventListener('click', onBackdropClick);\nwindow.addEventListener('keydown', onEscBtnClick);\n\nfunction onCloseModal() {\n    window.removeEventListener('keydown', onEscBtnClick)\n    backdrop.classList.add('is-hidden')\n}\n\nfunction onBackdropClick(event) {\n    if (event.currentTarget === event.target) {\n        backdrop.classList.add('is-hidden')\n    }\n}\n\nfunction onEscBtnClick(event) {\n    if (event.code === 'Escape') {\n        onCloseModal(event);\n    }\n}","import refs from './refs';\n\nconst headerContainer = document.querySelector('.container');\n\nconst onClickHomeBtn = () => {\n  headerContainer.innerHTML = `<nav class='nav'>\n    <img class='img__logo' src='./images/header/film.png' alt='' />\n    <a class='nav__logo'>Filmoteka</a>\n    <ul class='nav__list'>\n      <li class='nav__list-item home'>\n        <a class='nav__list-link' href=''>Home</a><span class='span span-home'></span>\n      </li>\n      <li class='nav__list-item library'>\n        <a class='nav__list-link' href=''>My Library</a><span class='span span-library'></span>\n      </li>\n    </ul>\n  </nav>\n  <form class='search-form' id='search-form'>\n    <div class='wrap'>\n      <input\n        class='input'\n        type='text'\n        name='searchQuery'\n        autocomplete='off'\n        placeholder='Поиск фильмов'\n      />\n      <button class='search-btn' type='submit'>\n        <svg\n          class='search-svg'\n          width='13'\n          height='13'\n          viewBox='0 0 12 12'\n          fill='none'\n          xmlns='http://www.w3.org/2000/svg'\n        >\n          <path\n            d='M5.5 9.5C7.70914 9.5 9.5 7.70914 9.5 5.5C9.5 3.29086 7.70914 1.5 5.5 1.5C3.29086 1.5 1.5 3.29086 1.5 5.5C1.5 7.70914 3.29086 9.5 5.5 9.5Z'\n            stroke='white'\n            stroke-linecap='round'\n            stroke-linejoin='round'\n          ></path>\n          <path\n            d='M10.5 10.5002L8.32495 8.3252'\n            stroke='white'\n            stroke-linecap='round'\n            stroke-linejoin='round'\n          ></path>\n        </svg>\n      </button>\n    </div>\n  </form>`;\n};\n\nrefs.homeLi.addEventListener('click', onClickHomeBtn);\n","import './sass/main.scss';\nimport './js/api-service';\nimport './js/library';\nimport './js/searchMovie';\nimport './js/modal';\nimport 'modern-normalize/modern-normalize.css';\nimport './js/render-home-page';\n"]}